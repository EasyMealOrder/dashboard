FORMAT: 1A
HOST: http://easymealorder.apiblueprint.org/

# easyMealOrder

easyMealOrder is a simple API allowing people to deal with meal order online.
The Documentation mode is https://easymealorder.docs.apiary.io

## Dishes Collection [/category/]

### List All Category [GET]

+ Response 200 (application/json)
            [
                {
                    "dtype": "纪念品"
                },
                {
                    "dtype": "特色"
                }
            ]
            
## Table Assignment [/table/{table}/]
+ Parameters
    + table (number) - ID of table


### Assign table by id [GET]

+ Response 200 (application/json)
    {
        "table":table
    }
    
    
## Dishes Collection [/dishes/]

### Get all dishes [GET]

all dishes' details will be return

+ Response 200 (application/json)
            [
                {
                    "id":2,
                    "name": "白切鸡",
                    "price":16.5,
                    "pic": "img/xxx.jpg"，
                    "type": "food",
                    "num" : 1,
                    "description" : "不加辣",
                    "recommend":true
                },
                {
                    "id":3,
                    "price":16.5,
                    "name": "假装白切鸡",
                    "dtype": "pppp",
                    "pic":"img/pic.jpg"
                    "num" : 1,
                    "description" : "不加辣",
                    "recommend":true
                }
            ]
    
## Dish collection [/dishes/{id}/]
+ Parameters
    + id (number) - ID of dish


### Get dishes info by id [GET]

+ Response 200 (application/json)
                {
                    "id":id,
                    "price":16.5,
                    "name": "假装白切鸡",
                    "dtype": "pppp",
                    "pic":"img/pic.jpg"
                    "num" : 1,
                    "description" : "不加辣",
                    "recommend":true
                }

## Order collection [/order/ufcount/]

### Get unfinished order count [GET]

+ Response 200 (application/json)
                {
                    count:3
                }
                
## Order collection [/order/cancelcount/]

### Get canceled order count [GET]

+ Response 200 (application/json)
                {
                    count:3
                }                
                
## Order collection [/order/count/]

### Get order count [GET]

+ Response 200 (application/json)
                {
                    count:3
                }
## Order collection [/order/unfinished/]

### Get unfinished order(staff only) [GET]

+ Response 200 (application/json)
 [
        {
            "id" :2,
            "username"  :"anon",
            "price" :12.8,
            "finished" :True,
            "cancel" :False,
            "note"  :"shiiiit",
            "table"  :3
        },
        {
            "id" :3,
            "username"  :"anon",
            "price" :14.8,
            "finished" :True,
            "cancel" :False,
            "note"  :"good shiiiit",
            "table"  :6
        },
]           

## Order collection [/order/{orderid}/]
+ Parameters
    + orderid (number) - ID of order
### Get order [GET]

+ Response 200 (application/json)
        {
            "id" :orderid,
            "username"  :"anon",
            "price" :12.8,
            "finished" :True,
            "cancel" :False,
            "note"  :"shiiiit",
            "table"  :3
        }
## Order collection [/order/pages/{OnePagesItemNum}/{pageNumber}]
+ Parameters
    + OnePagesItemNum (number) - item number per page
    + pageNumber (number) - which page
### Get many order [GET]

+ Response 200 (application/json)
[
   {
      "id" :2,
      "price" :12,
      "finished" :True,
    }
]




## DishRecord collection [/dishrecord/{order}/]
+ Parameters
    + order (number) - order id

### Get dishrecord [GET]

+ Response 200 (application/json)
[
 {
    "orderID" :order,
    "name":"rubber"
    "dishID" :2,
    "number":2,
    "price" :12.7
    "finished":True
 }
]




## order Collection [/orders/create/]

### Customer submit order [POST]


+ Request (application/json)

{
    "order":{
    "price":14,
    "note":"more salt",
    "table":1
    },
    "dishrecord":[{"dishID":1,"number":1,"price":14,"name":"fgsh"},{"dishID":2,"number":3,"price":25,"name":"rubbers"}]
}

+ Response 201 (application/json)


    + Body

            {
                "orderID" : 666
            }



## Order Collection [/orders/cancel/]

### Customer cancel order [POST]


+ Request (application/json)

{
    "orderID":34
}

+ Response 201 (application/json)


    + Body

            {
                "orderID" : 34
            }
            

## Order Collection [/orders/finish/]

### Cook finish order [POST]


+ Request (application/json)

{
    "orderID":666
}

+ Response 201 (application/json)


    + Body

            {
                "orderID" : 666
            }
            

## DishRecord Collection [/dishrecord/finish/]

### Cook finish dishrecord [POST]


+ Request (application/json)

{
    "orderID":666,
    "dishID":3
}

+ Response 201 (application/json)


    + Body

            {
                "orderID" : 666
            }